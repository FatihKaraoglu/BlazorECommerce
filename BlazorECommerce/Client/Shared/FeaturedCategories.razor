@page "/featured-categories"
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager
@if (isLoading)
{
    <p>Loading...</p>
}
else if (CategoryService?.FeaturedCategories == null || !CategoryService.FeaturedCategories.Any())
{
    <p>No featured categories available.</p>
}
else
{
    <div class="featured-categories">
        <div class="header">
            <h2>Featured Categories</h2>
            <div class="icon-link">
                <MudLink href="/all-categories" class="all-categories-link" Color="Color.Inherit">All Categories</MudLink>
                <MudIcon Icon="@Icons.Material.Filled.ChevronRight"></MudIcon>
            </div>
        </div>
        <div class="categories">
            @foreach (var featuredCategory in CategoryService.FeaturedCategories)
            {
                <MudCard Elevation="2" >
                    <MudCardContent Class="d-flex justify-content-center flex-column align-center pa-8">
                        <MudIcon Icon="@featuredCategory.Icon" Title="@featuredCategory.Name" Style="font-size: 2.4rem; color: var(--accent-light)" />
                        <MudText Style="color: var(--secondary-dark)">@featuredCategory.Name</MudText>
                    </MudCardContent>
                </MudCard>
            }
        </div>
    </div>
}

@code {
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadFeaturedCategories();
    }

    private async Task LoadFeaturedCategories()
    {
        try
        {
            await CategoryService.GetFeaturedCategories();
        }
        catch (Exception ex)
        {
            // Handle exceptions as needed, e.g., logging
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToCategory(Category category)
    {
        if (category != null && !string.IsNullOrEmpty(category.Url))
        {
            NavigationManager.NavigateTo(category.Url);
        }
    }
}
