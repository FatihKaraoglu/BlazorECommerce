@using BlazorECommerce.Client.Services.CompanyService;
@using BlazorECommerce.Client.Services.ThemeService;
@using MudBlazor
@using MudBlazor.Utilities;
@inject IThemeService ThemeService
@inject ICompanyService CompanyService


<MudThemeProvider Theme="@ThemeService.theme" />
@if (isLoading)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
}
else
{
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="routeData" DefaultLayout="typeof(Layout)" />
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="typeof(Layout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
}

@code {
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadThemeAsync();
    }

    private async Task LoadThemeAsync()
    {
        try
        {
            await CompanyService.GetCompany();
            ThemeService.theme = new MudTheme()
                {
                    Typography = new Typography()
                    {
                        Default = new Default()
                        {
                            FontFamily = new[] { "Lato", "sans-serif", "Playfair Display" },
                            FontSize = "67.5%",
                            LineHeight = 1,
                            FontWeight = 400
                        },
                    },
                    Palette = new Palette
                    {
                        Primary = new MudColor(ThemeService.GetTheme(CompanyService.Company.PrimaryColor).PrimaryColor)
                    }
                };
        }
        catch (Exception ex)
        {
            // Handle exceptions as needed
            Console.WriteLine($"Error loading theme: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}